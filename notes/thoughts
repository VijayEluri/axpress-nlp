New thoughts 2012-12-11

What I want from axpress:
  see it get off the ground and have other people interested in it
    could be interesting to see it used on the Ubi or PlotWatt or
    on the open web as a library ... monitization?
  ubi with a screen
  -> how to make it useful to myself?
    if this is as amazing as I am making it out to be, why am I having trouble finding good niche use cases
    plotwatt
      mysql layer
      better multiline support
        comments
        scripting syntax like in disag_obs.py
  to use it to help answer simple questions and do basic research
  it does seem a little too general and so hard to sell or make an entrance
    with.  A niche would be great:
      PlotWatt
      Ubi
        'solving' a domain that others have not yet, might be good for making
        the pitch - but then what is the pitch?  What about PlotWatt and 
        Dandelion?
      call centers
        blegh - real work - who to talk to, business people - :P

* what is the MVP?
  * a few representative 'apps'/domains
    * see set of apps below
  * confident that if there is an answer, it will be found
  * a clean web page
* version 2
  * simple andoid app (polished ?)
  * solid logging ?  I think to keep track of what people are asking so effort can be placed efficiently
  * demo? (video)
  * freebase?
  * anything that could be cafe/bar tested?
     * if you could ask a computer anything, what would you ask it?

* high level features
  * context
    * weather in btown; what about indi?
      * this seems like it will require storing various parts of the original 
        query like btown.  Consider these cases:
          weather in btown; what about (in |)indi
          weather in btown; what about the traffic there?
        in one case the subject is changing, in the other the property is chaning
  * default values
    * "what is the temp?" instead of "what is the temp in btown?"
  * automatic expansion of english translations
  * db intigration - a triple store or object store with translation rules acting as triggers
  * automatic simplification/altering of input search so that it fits a translation
    whats|what's -> what is
  * frequent prefixes: basic types, list, string, int, is, etc.  should they maybe just be a. ?
  * auto spell check
  * how to support putting a function call in an output ...
    the after method seems to be doing alright
  * import only when necessary to reduce the number of libraries that need
    installed in order to run a demo
  * debug:
    * from a point in the debug output, quickly see why one translation wasn't matched
  * translation coding
    * let me first write a few apps the slow way and see how they go
    * how to do function calls better ... like string concatenation
    * web interface for editing sets of translations ?
      * I've never liked coding in a browser ...
    * be able to search for a set of translations.  For example:
        view all simple_display translations
      You might want to see them all together.  You might also want some of the 
      spefic ones to appear with the specific other translations they interact
      with.
    * it is important that writing translations be easy.
    * coders shouldn't need to enumerate all of the "show me all of my %x%"
      all of the time.  I don't think this should be too hard ... just need
      to wait and see what the first few cases of this look like and figure 
      from there what the abstraction should look like.
  * debugging
    * syhead is kinda working for this ...
    * the paths get quite large ...
    * better common error checking:
      * multiple bindings to different places
      * misspellings (rare names that are very similar to common names)
  * different display depending on the input
    * "day of prayer" => sunday
    * "sunday" => 2011-12-16
    * this breaks many things ... hold off for now
    * this leads to wolfram alpha type displays where different views of the 
      same 'thing'.  This solution doesn't work for with voice output since
      it would overwhelm the user.  Also though, the voice output could ask for
      more details about what information about the thing the user wants ...
      thats not too bad
  * users training axpress
    * if a user tries a command and axpress doesn't know what it means, the
      user could try reprashing the command.  With lots of this kind of data, 
      we might be able to automatically derive new rephrasings of rules ...
    * what would be really cool would be if we could create whole new rules, not
      just new rephrasings, but then you start getting into programming ...
      the real task is to figure out how to most easily allow anyone to create
      new rules and teach axpress.  Some things are hard, like creating a
      new computer vision library, others are easier ...
  * android app?
  * web app?

* mission:
  to organize the world's thoughts and make them universally accessible
  to organize the world's intelligence and make it universally accessible
  to organize the world's desires and make them universally atainable
  to organize the world's dreams and make them universally atainable
  to organize life's dreams and make them universally atainable
  to organize Life's dreams and make them universally atainable
  to explore Life's dreams and make them universally atainable
  to discover Life's dreams and make them universally atainable
  to universally enable the discovery of Life's dreams and make them atainable
  to make Lifes' dreams universally atainable
